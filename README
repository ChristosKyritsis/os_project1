Η υλοποίηση της εργασίας αποτελείται από:
    Τα folders:
        include
        src
    καθώς και τα folders:
        bin
        build
    τα οποία δημιουργούνται απο το Makefile κάνοντας την εντολή make στο terminal

    Τα παραπάνω folders περιέχουν τα εξής:
    include:
            
        inc.h :
            Το οποίο περιλαμβάνει όλα τα απαραίτητα includes τα οποία χρειάζονται οι διεργασίες,
            καθώς και τα defines. Περιέχει επίσης ένα struct το οποίο είναι η κοινή μνήμη στο
            οποίο αποθηκεύονται όλα τα απαραίτητα στοιχεία, όπως οι 2 σημαφόροι που χρειάζονται
            για την επικοινωνία των δύο διεργασιών, οι μετρητές count της διεργασίας Α και Β
            αντίστοιχα που δείχνουν πόσα μηνύματα έχει στείλει/λάβει η κάθε διεργασία, οι δύο
            buffers στους οποίους αποθηκεύονται τα μηνύματα που στέλνει η κάθε διεργασία στην
            άλλη, το συνολικό μέγεθος των μηνυμάτων που έχει λάβει κάθε διεργασία και τέλος τον
            συνολικό χρόνο αναμονής που χρειάστηκε για την παραλαβή του πρώτου τεμαχίου, τα οποία
            μοιράζονται μεταξύ των διεργασιών A και B. Τέλος, περιέχει και τα πρότυπα των 
            συναρτήσεων του αρχείου inc.c .
        inc.c :
            Στο αρχείο inc.c υπάρχουν οι συναρτήσεις που διαχειρίζονται τα κοινά δεδομένα των 2
            διεργασιών A και B. Συγκεκριμένα, η συνάρτηση initialize_data αρχικοποιεί τους 2
            σημαφόρους όπου για δεύτερο όρισμα έχει την τιμή 0, το οποίο σημαίνει πως και οι 2
            σημαφόροι θα είναι ορατοί και απο τις 2 διεργασίες. Το τρίτο όρισμα είναι επίσης 0
            το οποίο υποδεικνύει ότι οι σημαφόροι θα έχουν ως αρχική τιμή τους το 0. Στη συνέχεια,
            η initialize_data αρχικοποιεί σε 0 όλες τις υπόλοιπες μεταβλητές του struct δείχνοντας
            πως μόλις ξεκίνησε και δεν έχει γίνει update σε καμία από τις μεταβλητές.
            Στη συνάρτηση print_data εφόσον έχει δημιουργηθεί η κοινή μνήμη γίνονται οι απαραίτητες
            εκτυπώσεις μηνυμάτων.
            Τέλος, η συνάρτηση free_data ελευθερώνει τους σημαφόρους που αρχικοοπιήθηκαν με την
            sem_init, κάνοντας sem_destroy.


    src:

        procA.c :
            Το αρχείο procA.c είναι υπεύθυνο για την δημιουργία κοινής μνήμης, την αρχικοποίηση
            των δεδομένων, καθώς και την ελευθέρωση όλων των πόρων αυτών. Στην αρχή του αρχείου
            procA.c γίνεται ένα define για την χρήση της συνάρτησης ftruncate. 
            
            Ξεκινώντας από την main συνάρτηση, η διεργασία Α περιμένει από τον χρήστη να δώσει
            ένα όνομα στην γραμμή εντολών για να το χρησιμοποιήσει στην αρχικοποίηση της κοινής
            μνήμης. Στη συνέχεια, δημιουργείται η κοινή μνήμη με την shm_open. Συγκεκριμένα, το
            O_CREAT σημαίνει πως αν δεν υπάρχει ήδη το αντικείμενο κοινής μνήμης το δημιουργεί, 
            το O_EXCL σημαίνει πως αν υπάρχει θα επιστραφεί μήνυμα λάθους και το O_RDRW σημαίνει
            πως η κοινή μνήμη θα επιτρέπει ανάγνωση και εγγραφή. Η συνάρτηση ftruncate μεταβάλει
            το μέγεθος του αρχείου , ώστε να χωρέσουν τα δεδομένα και η mmap κάνει mapping δηλαδή
            αντιστοιχίζει την κοινή μνήμη στην διεργασία. Το MAP_SHARED υποδηλώνει πως τυχόν
            αλλαγές θα είναι ορατές και από την όλες τις άλλες διεργασίες, δηλαδή σε αυτή την
            περίπτωση την διεργασία Β. Έπειτα, εφόσον η διεργασία Α είναι υπεύθυνη για την
            αρχικοποίηση των δεδομένων, τα αρχικοποιεί και στη συνέχεια δημιουργεί τα νήματα με
            την συνάρτηση pthread_create και με την συνάρτηση pthread_join κάνει join στα thread
            τα οποία δημιούργησε. Τέλος, εφόσον βγει από τα νήματα ελευθερώνει τα δεδομένα με την
            free_data και στη συνέχεια με την χρήση της munmap ελευθερώνει τη μνήμη η οποία έγινε
            στην αρχή από την mmap και απελευθερώνει το όνομα το οποίο δώθηκε από τον χρήστη στην
            γραμμή εντολών για την κοινή μνήμη.
            Να σημειωθεί, πως για κάθε μία από τις συναρτήσεις γίνεται έλεγχος για αποτυχία της, 
            στην οποία περίπτωση γίνεται έξοδος με μήνυμα αποτυχίας.

            Στη συνάρτηση input_thread δίνονται ως όρισμα τα δεδομένα και σε έναν ατέρμον βρόγχο
            η διεργασία Α στέλνει στην διεργασία Β μηνύματα τα οποία ο χρήστης δίνει μέσω της fgets.
            Έπειτα, η συνάρτηση κάνει post τον σημαφόρο ο οποίος είναι υπέυθυνος να ενημερώσει το
            νήμα της διεργασίας Β που έχει αναλάβει να λαμβάνει τα μηνύματα της Α πως ήρθε η σειρά
            του για εκτέλεση. Επίσης, η συνάρτηση αυτή ελέγχει αν δώθηκε μήνυμα τερματισμού στην
            οποία περίπτωση εκτυπώνει τα δεδομένα και τερματίζει το thread.

            Η συνάρτηση receive_thread της διεργασίας Α μέσα σε έναν ατέρμον βρόγχο περιμένει από 
            το thread της διεργασίας Β που έχει αναλάβει να στέλνει μηνύματα στην διεργασία Α να 
            κάνει post τον σημαφόρο της, ώστε να εκτελέσει τον κώδικα εκτύπωσης του μηνύματος. 
            Όταν γίνει αυτό παίρνει τη χρονική στιγμή που έγινε το post και κοιτάει αν το μήνυμα 
            που δέχτηκε είναι μήνυμα τερματισμού. Αν όχι, τότε κάνει έναν έλεγχο για το μέγεθος 
            του μηνύματος και σε περίπτωση που αυτό ξεπερνάει το MAX_SIZE_OF_MESSAGE, δηλαδή 15
            στην περίπτωσή μας, τότε εκτυπώνει το μήνυμα σε μικρότερα μηνύματα μεγέθους 15, ίσο
            δηλαδή με το MAX_SIZE_OF_MESSAGE. Όταν γίνει αυτό, παίρνει τη χρονική στιγμή και 
            ενημερώνει τα δεδομένα.


        procB.c :
            Το αρχείο procB.c είναι παρόμοιο με το procA.c δίοτι εκτελεί παρόμοιο έργο.
            Συγκεκριμένα:

            Η συνάρτηση main ανοίγει την κοινή μνήμη η οποία δώθηκε στην γραμμή εντολών από τον 
            χρήστη και έχει ανοιχτεί από την διεργασία Α. Έπειτα, δημιουργεί και μπαίνει στα 
            νήματα που δημιούργησε και βγαίνοντας κάνει munmap ώστε να ελευθερώσει τη μνήμη της
            mmap.

            Η συνάρτηση input_thread_B όμοια με την input_thread της διεργασίας Α αναλαμβάνει να
            στείλει το μήνυμα το οποίο ο χρήστης έδωσε μέσω της fgets στην γραμμή εντολών στην
            διεργασία Α. Ελέγχει επίσης, αν το μήμυμα του χρήστη είναι το μήνυμα τερματισμού.
            Σε αυτή την περίπτωση εκτυπώνει τα δεδομένα και βγαίνει από το thread.

            Η συνάρτηση receive_thread_B περιμένει από το νήμα input_thread της διεργασίας Α να
            δώσει το μήμυμα και εφόσον το δώσει ξεκινάει την χρονομέτρηση αποθηκεύοντας την 
            χρονική στιγμή που έλαβε το μήνυμα από την διεργασία Α. Στη συνέχεια ελέγχει αν δώθηκε
            μήνυμα τερματισμού με σκοπό να μην το εκτυπώσει και σε διαφορετική περίπτωση εκτυπώνει
            το μήνυμα ανάλογα με το μέγεθός του, είτε ολόκληρο, ή αν είναι μεγαλύτερο μέγεθος του
            MAX_SIZE_OF_MESSAGE σε μικρότερα μηνύματα μεγέθους MAX_SIZE_OF_MESSAGE το πολύ. Τέλος,
            λαμβάνει την χρονική στιγμή που τελείωσε αυτή η διαδικασία και ενημερώνει κατάλληλα τα
            δεδομένα.



    Περιέχει επίσης και ένα Makefile το οποίο περιλαμβάνει τα κατάλληλα flags ώστε να κάνει compile
    τα προγράμματα. Με την εντολή make γίνεται το compile των αρχείων και η δημιουργία των φακέλων
    bin και build. Το Makefile περιέχει ακόμα την εντολή make clean η οποία διαγράφει τα folders
    bin και build καθώς και τα αντικείμενα και εκτελέσιμα προγράμματα που περιέχονται σε αυτούς 
    τους φακέλους.



ΠΛΗΡΟΦΟΡΙΕΣ ΓΙΑ ΕΚΤΕΛΕΣΗ:
    